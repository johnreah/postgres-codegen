/*
 * Created on 2021-11-04 ( Date ISO 2021-11-04 - Time 13:31:49 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.4.0
 */
package com.johnreah.accounts.telosysjpa.generated.persistence.impl.fake;

import java.util.List;


import javax.inject.Named;

import com.johnreah.accounts.telosysjpa.generated.data.record.CustomerRecord;
import com.johnreah.accounts.telosysjpa.generated.persistence.CustomerPersistence;
import com.johnreah.accounts.telosysjpa.generated.persistence.impl.fake.commons.GenericFakeDAO;

/**
 * Customer persistence service - FAKE implementation 
 * 
 * @author Telosys
 *
 */
@Named("CustomerPersistence")
public class CustomerPersistenceFake extends GenericFakeDAO<CustomerRecord> implements CustomerPersistence {

	/**
	 * Constructor
	 */
	public CustomerPersistenceFake() {
		super(CustomerRecord.class);
	}

	/**
	 * Creates a new bean instance and set its primary key value(s)
	 * 
	 * @param id
	 * @return the new instance
	 */
	private CustomerRecord newInstanceWithPrimaryKey(Long id) {
		CustomerRecord record = new CustomerRecord();
        record.setId(id); 
		return record;
	}

	//-------------------------------------------------------------------------------------
	// Generic DAO abstract methods implementations
	//-------------------------------------------------------------------------------------
	@Override
	protected String getKey(CustomerRecord record) {
		return buildKeyString(record.getId());
	}
	
	@Override
	protected void setAutoIncrementedKey(CustomerRecord record, long value) {
		//record.setId((Long)value);
		record.setId(value);
	}

	//-------------------------------------------------------------------------------------
	// Persistence interface implementations
	//-------------------------------------------------------------------------------------
	@Override
	public long countAll() {
		return super.doCountAll();
	}
	
	@Override
	public CustomerRecord create(CustomerRecord record) {
		super.doCreateAutoIncremented(record);
		return record;
	}

	@Override
	public boolean delete(CustomerRecord record) {
		return super.doDelete(record);
	}

	@Override
	public boolean deleteById(Long id) {
		CustomerRecord record = newInstanceWithPrimaryKey(id);
		return super.doDelete(record);
	}

	@Override
	public boolean exists(CustomerRecord record) {
		return super.doExists(record);
	}

	@Override
	public boolean exists(Long id) {
		CustomerRecord record = newInstanceWithPrimaryKey(id);
		return super.doExists(record);
	}

	@Override
	public List<CustomerRecord> findAll() {
		return super.doFindAll();
	}

	@Override
	public CustomerRecord findById(Long id) {
        CustomerRecord record = newInstanceWithPrimaryKey(id);
		return super.doFind(record);
	}

	@Override
	public CustomerRecord save(CustomerRecord record) {
		if (super.doExists(record)) {
			super.doUpdate(record);
		} else {
			super.doCreateAutoIncremented(record);
		}
        return record;
	}

	@Override
	public boolean update(CustomerRecord record) {
		return super.doUpdate(record);	
	}
}
