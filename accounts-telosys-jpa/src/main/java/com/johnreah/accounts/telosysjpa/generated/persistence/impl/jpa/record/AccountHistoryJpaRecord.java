/*
 * Created on 2021-11-04 ( Date ISO 2021-11-04 - Time 13:31:50 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.4.0
 */

package com.johnreah.accounts.telosysjpa.generated.persistence.impl.jpa.record;

import java.io.Serializable;

import java.time.LocalDateTime;

import javax.persistence.*;

/**
 * Persistent class for "AccountHistory" entity stored in table "account_history" <br>
 * This class is a "record entity" without JPA links  <br>
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="account_history", schema="public" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="AccountHistoryJpaRecord.countAll",  query="SELECT COUNT(x) FROM AccountHistoryJpaRecord x" ),
  @NamedQuery ( name="AccountHistoryJpaRecord.countById", query="SELECT COUNT(x) FROM AccountHistoryJpaRecord x WHERE x.id = ?1 " )
} )
public class AccountHistoryJpaRecord implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="id", nullable=false)
    private Long       id           ; 

    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="account_id")
    private Long       accountId    ; // Foreign Key 

    @Column(name="time_stamp")
    private LocalDateTime timeStamp    ; 

    @Column(name="account")
    private Double     account      ; 

    @Column(name="balance")
    private Double     balance      ; 

    @Column(name="description", length=2147483647)
    private String     description  ; 


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public AccountHistoryJpaRecord() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setId( Long id ) {
        this.id = id ;
    }
    public Long getId() {
        return this.id;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : account_id ( int8 ) 
    public void setAccountId( Long accountId ) {
        this.accountId = accountId;
    }
    public Long getAccountId() {
        return this.accountId;
    }

    //--- DATABASE MAPPING : time_stamp ( timestamptz ) 
    public void setTimeStamp( LocalDateTime timeStamp ) {
        this.timeStamp = timeStamp;
    }
    public LocalDateTime getTimeStamp() {
        return this.timeStamp;
    }

    //--- DATABASE MAPPING : account ( float8 ) 
    public void setAccount( Double account ) {
        this.account = account;
    }
    public Double getAccount() {
        return this.account;
    }

    //--- DATABASE MAPPING : balance ( float8 ) 
    public void setBalance( Double balance ) {
        this.balance = balance;
    }
    public Double getBalance() {
        return this.balance;
    }

    //--- DATABASE MAPPING : description ( text ) 
    public void setDescription( String description ) {
        this.description = description;
    }
    public String getDescription() {
        return this.description;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuilder sb = new StringBuilder(); 
        sb.append("["); 
        sb.append(id);
        sb.append("]:"); 
        sb.append(accountId);
        sb.append("|");
        sb.append(timeStamp);
        sb.append("|");
        sb.append(account);
        sb.append("|");
        sb.append(balance);
        sb.append("|");
        sb.append(description);
        return sb.toString(); 
    } 

}
